name: Terraform Automation pipeline

on:
  push:
    branches:
      - master

env:
  TF_VERSION: "1.1.0"

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
    
    - name: Terraform Init
      run: terraform init -backend-config=backend.conf
      working-directory: ./

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./

    - name: Checkov GitHub Action
      uses: bridgecrewio/checkov-action@v12
      with:
        # This will add both a CLI output to the console and create a results.sarif file
        output_format: cli,sarif
        output_file_path: console,results.sarif
      
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      
      # Results are generated only on a success or failure
      # this is required since GitHub by default won't run the next step
      # when the previous one has failed. Security checks that do not pass will 'fail'.
      # An alternative is to add `continue-on-error: true` to the previous step
      # Or 'soft_fail: true' to checkov.
      if: success() || failure()
      with:
        sarif_file: results.sarif

    - name: Terraform Plan 
      run: terraform plan -var-file=us-west-1-dev.tfvars
      working-directory: ./
